“use strict”; function updateCoords（e）{pointerX =（e.clientX || e.touches [0] .clientX）-canvasEl.getBoundingClientRect（）。left，pointerY = e.clientY || e.touches [0] .clientY-canvasEl.getBoundingClientRect（）。top} function setParticuleDirection（e）{var t = anime.random（0,360）* Math.PI / 180，a = anime.random（50,180），n = [ -  1,1] [anime.random（0,1）] * a; return {x：e.x + n * Math.cos（t），y：e.y + n * Math.sin（t）}} function createParticule（e ，t）{var a = {}; return ax = e，ay = t，a.color = colors [anime.random（0，colors.length-1）]，a.radius = anime.random（16,32 ），a.endPos = setParticuleDirection（a）中，a.draw =函数（）{ctx.beginPath（），ctx.arc（AX，AY，a.radius，0,2 * Math.PI，！0），CTX .fillStyle = a.color，ctx.fill（）}，a} function createCircle（e，t）{var a = {}; return ax = e，ay = t，a.color =“＃F00”，a。半径= 0.1，a.alpha = 0.5，a.lineWidth = 6，a.draw =函数（）{ctx.globalAlpha = a.alpha，ctx.beginPath（），ctx.arc（AX，AY，一个。radius，0,2 * Math.PI，！0），ctx.lineWidth = a.lineWidth，ctx.strokeStyle = a.color，ctx.stroke（），ctx.globalAlpha = 1}，a} function renderParticule（e） {for（var t = 0; t <e.animatables.length; t ++）{e.animatables [t] .target.draw（）}} function animateParticules（e，t）{for（var a = createCircle（e， 。吨）中，n = []，I = 0; I <numberOfParticules;我++）{n.push（createParticule（E，T））} anime.timeline（）添加（{目标：N，X：函数（e）中{return e.endPos.x}，y：function（e）{return e.endPos.y}，radius：0.1，duration：anime.random（1200,1800），easing：“easeOutExpo”，update：renderParticule}） 。新增（{目标：一，半径：anime.random（80160），线宽;：0，α-：{值：0，缓解： “线性”，持续时间：anime.random（600800）}，持续时间：anime.random（ 1200,1800），缓和：“easeOutExpo”，更新：renderParticule，offset：0}）}函数debounce（e，t）{var a; return function（）{var n = this，i = arguments; clearTimeout（a） ，a = setTimeout（function（）{e.apply（n，i）}，t）}} var canvasEl = document.querySelector（“。fireworks”）; if（canvasEl）{var ctx = canvasEl.getContext（“2d”） ），numberOfParticules = 30，pointerX = 0，pointerY = 0，抽头= “鼠标按下”，颜色= [ “＃FF1461”， “＃18FF92”， “＃5A87FF”， “＃FBF38C”]，setCanvasSize =反跳（函数（ ）{canvasEl.width = 2 * window.innerWidth，canvasEl.height = 2 * window.innerHeight，canvasEl.style.width = window.innerWidth + “PX”，canvasEl.style.height = window.innerHeight + “PX”，canvasEl。 。的getContext（ “2D”）尺度（2,2）}，500），呈现=动画（{持续时间：1/0，更新：函数（）{ctx.clearRect（0,0，canvasEl.width，canvasEl.height ）}}）; document.addEventListener（抽头，函数（E）{ “栏” == e.target.id && “切换-栏” == e.target.id && “A” == e.target !!!。节点名称：＆ “IMG”！== e.target.nodeName &&（render.play（），updateCoords（E），animateParticules（pointerX，pointerY））}，！1），setCanvasSize（），window.addEventListener（ “调整”，setCanvasSize ，！1）}“use strict”;函数updateCoords（e）{pointerX =（e.clientX || e.touches [0] .clientX）-canvasEl.getBoundingClientRect（）。left，pointerY = e.clientY || e .touches [0] .clientY-canvasEl.getBoundingClientRect（）。top} function setParticuleDirection（e）{var t = anime.random（0,360）* Math.PI / 180，a = anime.random（50,180），n = [ -1,1] [anime.random（0,1）] *一个;返回{X：e.x + N * Math.cos（T），Y：e.y + N * Math.sin（T）} } function createParticule（e，t）{var a = {}; return ax = e，ay = t，a.color = colors [anime.random（0，colors.length-1）]，a.radius = anime。随机（16,32），a.endPos = setParticuleDirection（a）中，a.draw =函数（）{ctx.beginPath（），ctx.arc（AX，AY，a.radius，0,2 * Math.PI， ！0），ctx.fillStyle = a.color，ctx.fill（）}，a} function createCircle（e，t）{var a = {}; return ax = e，ay = t，a.color =“＃F00”，a.radius = 0.1，a.alpha = 0.5，a.lineWidth = 6，a.draw =函数（）{ctx.globalAlpha = a.alpha，ctx.beginPath（），ctx.arc（AX，AY，a.radius，0,2 * Math.PI，！0），CTX。 lineWidth = a.lineWidth，ctx.strokeStyle = a.color，ctx.stroke（），ctx.globalAlpha = 1}，a} function renderParticule（e）{for（var t = 0; t <e.animatables.length; t ++）{e.animatables [t] .target.draw（）}} function animateParticules（e，t）{for（var a = createCircle（e，t），n = []，i = 0; i <numberOfParticules; i ++）{n.push（createParticule（e，t））} anime.timeline（）。add（{targets：n，x：function（e）{return e.endPos.x}，y：function（e）{ return e.endPos.y}，radius：0.1，duration：anime.random（1200,1800），easing：“easeOutExpo”，update：renderParticule}）。add（{targets：a，radius：anime.random（80,160） ，线宽;：0，α-：{值：0，缓解： “线性”，持续时间：anime.random（600800）}，duration：anime.random（1200,1800），easing：“easeOutExpo”，update：renderParticule，offset：0}）} function debounce（e，t）{var a; return function（）{var n = this，i = arguments; clearTimeout（a），a = setTimeout（function（）{e.apply（n，i）}，t）}} var canvasEl = document.querySelector（“。fireworks”）; if（canvasEl）{var ctx = canvasEl.getContext（ “2D”），numberOfParticules = 30，pointerX = 0，pointerY = 0，抽头= “鼠标按下”，颜色= [ “＃FF1461”， “＃18FF92”， “＃5A87FF”， “＃FBF38C”] ，setCanvasSize =反跳（函数（）{canvasEl.width = 2 * window.innerWidth，canvasEl.height = 2 * window.innerHeight，canvasEl.style.width = window.innerWidth + “PX”，canvasEl.style.height =窗口。 。innerHeight + “PX”，canvasEl.getContext（ “2D”）尺度（2,2）}，500），呈现=动画（{持续时间：1/0，更新：函数（）{ctx.clearRect（0,0， canvasEl.width，canvasEl。高度）}}）; !!! document.addEventListener（抽头，函数（E）{ “栏” == e.target.id && “切换-栏” == e.target.id && “A” == e.target .nodeName && “IMG”！== e.target.nodeName &&（render.play（），updateCoords（E），animateParticules（pointerX，pointerY））}，！1），setCanvasSize（），window.addEventListener（ “调整”， setCanvasSize，1）}！;